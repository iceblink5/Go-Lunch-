class PlacesController < ApplicationController
  #before_filter :authenticate_user!
  before_filter :auth_user_signin

  def auth_user_signin
    puts "USER SIGNED IN STATUS"
    puts user_signed_in?
    unless user_signed_in?
      authenticate_user!
    end
  end

  # GET /places
  # GET /places.xml
  def index
    puts "IN INDEX"
   #@places = Place.all
   # @places = Place.all(:select  =>  "#{Place.table_name}.*, COUNT(#{Vote.table_name}.id) number_of_votes", :joins  => "left outer join votes on votes.place_id = `places`.`id`", :order  => "number_of_votes DESC", :group => "`places`.`id`")
   #
   #
   #Newest
    #@places = Place.all(:select  =>  "#{Place.table_name}.*, COUNT(#{Vote.table_name}.id) number_of_votes", :joins  => "left outer join votes on votes.place_id = `places`.`id`", :order  => "number_of_votes DESC", :group => "`places`.`id`", :conditions  => ["DATE(`votes`.`created_at`)>DATE(?)", Time.now.beginning_of_day])
    @places = Place.all(:select  =>  "#{Place.table_name}.*, COUNT(#{Vote.table_name}.id) number_of_votes", :joins  => "left outer join votes on votes.place_id = `places`.`id`", :order  => "number_of_votes DESC", :group => "`places`.`id`")
   #
   #
   #
    #@places = Place.all(:select  =>  "#{Place.table_name}.*, COUNT(#{Vote.table_name}.id) number_of_votes", :joins  => "left outer join votes on votes.place_id = `places`.`id`", :order  => "number_of_votes DESC", :group => "`places`.`id`")
    @vote = Vote.new
    @user_votes = Vote.where(:user_id  => current_user.id) 

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml => @places }
    end
  end

  # GET /places/1
  # GET /places/1.xml
  def show
    puts "IN SHOW"
    #redirect_to(places_path)
    @place = Place.find(params[:id])

    respond_to do |format|
      format.html # show.html.erb
      format.xml  { render :xml => @place }
    end
  end

  # GET /places/new
  # GET /places/new.xml
  def new
    puts "IN NEW"
    @place = Place.new

    respond_to do |format|
      format.html # new.html.erb
      format.xml  { render :xml => @place }
    end
  end

  # GET /places/1/edit
  def edit
    @place = Place.find(params[:id])
    puts "IN EDIT"
  end

  # POST /places
  # POST /places.xml
  def create
    puts "IN CREATE"
    @place = Place.new(params[:place])

    respond_to do |format|
      if @place.save
        format.html { redirect_to(@place, :notice => 'Place was successfully created.') }
        format.xml  { render :xml => @place, :status => :created, :location => @place }
      else
        format.html { render :action => "new" }
        format.xml  { render :xml => @place.errors, :status => :unprocessable_entity }
      end
    end
  end

  # PUT /places/1
  # PUT /places/1.xml
  def update
    puts "IN UPDATE"
    @place = Place.find(params[:id])

    respond_to do |format|
      #if @place.update_attributes(params[:place])
      if @place.increment_and_update_attributes()
        format.html { redirect_to(@place, :notice => 'Place was successfully updated.') }
        format.xml  { head :ok }
      else
        format.html { render :action => "edit" }
        format.xml  { render :xml => @place.errors, :status => :unprocessable_entity }
      end
    end
  end

  # DELETE /places/1
  # DELETE /places/1.xml
  def destroy
    @place = Place.find(params[:id])
    @place.destroy

    respond_to do |format|
      format.html { redirect_to(places_url) }
      format.xml  { head :ok }
    end
  end
end
